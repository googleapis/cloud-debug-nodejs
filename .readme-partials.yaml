introduction: |-
  > This module provides Snapshot Debugger support for Node.js applications.
  Snapshot Debugger is an open source product that lets you debug your
  applications in production without stopping or pausing your application.

  A Firebase Realtime Database instance is used to store your data.

body: |-
  ## Debugger Agent Settings

  To customize the behaviour of the automatic debugger agent, specify options
  when starting the agent. The following code sample shows how to pass in a
  subset of the available options.

  ```js
  require('@google-cloud/debug-agent').start({
    // .. auth settings ..

    // debug agent settings:
    allowExpressions: true,
    serviceContext: {
      service: 'my-service',
      version: 'version-1'
    },
    capture: { maxFrames: 20, maxProperties: 100 }
  });
  ```

  The following options configure the connection to the Firebase database:
    * firebaseDbUrl - https://**PROJECT_ID**-cdbg.firebaseio.com will be used if
      not provided. where **PROJECT_ID** is your project ID.
    * firebaseKeyPath - Default google application credentials are used if not
      provided.

  See [the agent configuration][config-ts] for a list of possible configuration
  options.

  ## Using the Debugger

  Once your application is running, use the
  [Snapshot Debugger CLI](https://pypi.org/project/snapshot-dbg-cli/) or the
  [VSCode extension][extension-page]
  to debug your application.

  ## Historical note

  Version 6.x and 7.x of this agent supported both the now shutdown Cloud
  Debugger service (by default) and the
  [Snapshot Debugger](https://github.com/GoogleCloudPlatform/snapshot-debugger/)
  (Firebase RTDB backend) by setting the `useFirebase` flag to true. Version 8.0.0
  removed support for the Cloud Debugger service, making the Snapshot Debugger the
  default.  To note the `useFirebase` flag is now obsolete, but still present for
  backward compatibility.

  ## Limitations and Requirements

  > Note: There is a known issue where enabling the agent may trigger memory
  leaks.  See [#811](https://github.com/googleapis/cloud-debug-nodejs/issues/811)

  * Privacy issues can be created by setting snapshot conditions that watch
    expressions evaluated in the context of your application. You may be able
    to view sensitive user data when viewing the values of variables.
  * The debug agent tries to ensure that all conditions and watchpoints you
    add are read-only and have no side effects. It catches, and disallows,
    all expressions that may have static side effects to prevent accidental
    state change. However, it presently does not catch expressions that have
    dynamic side-effects. For example, `o.f` looks like a property access,
    but dynamically, it may end up calling a getter function. We presently do
    NOT detect such dynamic-side effects.
  * The root directory of your application needs to contain a `package.json`
    file.

  [config-ts]: https://github.com/googleapis/cloud-debug-nodejs/blob/master/src/agent/config.ts
  [extension-page]: https://github.com/GoogleCloudPlatform/snapshot-debugger/tree/main/snapshot_dbg_extension
  [snapshot-debugger-readme]: https://github.com/GoogleCloudPlatform/snapshot-debugger#readme
